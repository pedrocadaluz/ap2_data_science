#Frontend da aba ESTRAT√âGIA: 

#Importa√ß√£o das bibliotecas:
import streamlit as st
import pandas as pd


#Importa√ß√£o das outras fun√ß√µes criadas em outros arquivos: 
from backend.views import pegar_df_planilhao, carteira, validar_data
from backend.routers import menu_estrategia


#Exibi√ß√£o :
def render_estrategia():

    """
        Essa fun√ß√£o renderiza a p√°gina que exibe a carteira de a√ß√µes gerada a partir da an√°lise de dois indicadores financeiros.
    """

    st.header("üìà Estrat√©gia de An√°lise de A√ß√µes")
    st.write("**Planeje sua estrat√©gia:** Escolha indicadores financeiros para compor uma carteira de a√ß√µes com base em an√°lise de rentabilidade e desconto.")
    
    st.sidebar.header("Configura√ß√µes da Estrat√©gia")
    #Input dos indicadores:
    indicador_rent = st.sidebar.selectbox("Selecione o indicador de rentabilidade:", options=["roe", "roic", "roc"])
    indicador_desc = st.sidebar.selectbox("Selecione o indicador de desconto:", options=["earning_yield", "dividend_yield", "p_vp"])

    #Input data e quantidade de a√ß√µes (n√∫mero) a serem analisadas: 
    data = st.sidebar.date_input("Selecione uma data", value=pd.to_datetime('today'))
    num = st.sidebar.number_input("Quantas a√ß√µes voc√™ quer analisar?", min_value=1, max_value=30, value=5)
    validar_data(data)
    
    #Buscar os dados:
    if st.sidebar.button("Buscar"):
        df_sorted, acoes_carteira = carteira(data, indicador_rent, indicador_desc, num) #gera a carteira de a√ß√µes 
        # Armazena no session_state a vari√°vel acoes_carteira oriunda da fun√ß√£o carteira 
        st.session_state.acoes_carteira = acoes_carteira
        st.session_state.df_sorted = df_sorted #armazena df no cache 
        df = menu_estrategia(data, indicador_rent, indicador_desc, num)
        st.dataframe(df_sorted)    
        #texto explicativo para exibi√ß√£o: 
        st.subheader("Resultados da An√°lise")
        st.write(f"Top {num} a√ß√µes pelo indicador de rentabilidade: '{indicador_rent}' e pelo indicador de desconto '{indicador_desc}' em {data.strftime('%Y-%m-%d')}")
        st.table(acoes_carteira)



   
